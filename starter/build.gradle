plugins {
	id 'java'
	// docs https://docs.spring.io/spring-boot/docs/3.2.0/reference/htmlsingle/
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	// id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'org.asciidoctor.convert' version '1.5.8'
}

group = 'com.bytedesk'
version = '1.0'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	flatDir { dirs 'libs' }
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	// 发布上线时，需要将依赖项目打包成jar包放到libs文件夹
	// implementation fileTree(dir: 'libs', include: ['*.jar'])
	// 主要用于开发环境，方便集成测试
	// https://docs.gradle.org/current/userguide/core_dependency_management.html
	implementation project(':agent')
	implementation project(':core')
	implementation project(':socket')
	implementation project(':team')
	// 
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// 
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.mysql:mysql-connector-j'
	// default username: user, password is on the console
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// 
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-cache
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// https://mvnrepository.com/artifact/org.springframework.session/spring-session-data-redis
	implementation 'org.springframework.session:spring-session-data-redis'
	// http://localhost:9003/im/actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-rest
	// https://spring.io/guides/tutorials/react-and-spring-data-rest/
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	// oauth2
	// implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// implementation 'org.springframework.security:spring-security-oauth2-authorization-server'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	
	// db migration
	// implementation 'org.flywaydb:flyway-core'
	

	// for api docs
	// https://springdoc.org/
	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
	// http://localhost:9003/swagger-ui/index.html
	// http://localhost:9003/v3/api-docs
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// 
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
