
# ===============================
#=bytedesk config using h2database/caffeine, upload to local
# ===============================
bytedesk.debug=true
# default admin username/password/email/mobile info
# 默认管理员用户名密码
bytedesk.username=admin
bytedesk.password=admin
bytedesk.email=admin@email.com
bytedesk.mobile=13311156272
bytedesk.company=MyCompany
bytedesk.timezone=GMT+8

# ===============================
#=bytedesk cors config
# ===============================
bytedesk.cors-allowed-origins=*

# ===============================
#=bytedesk jwt config
# ===============================
bytedesk.jwt-secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
# 2592000000 # 30 days, milliseconds
bytedesk.jwt-expiration=2592000000
# 5184000000 # 60 days, milliseconds
bytedesk.jwt-refresh-token-expiration=5184000000

# ===============================
#=bytedesk cache config
# ===============================
# 0: no cache, 1: caffeine cache, 2: caffeine + redis cache
bytedesk.cache-level=2
bytedesk.cache-prefix=bytedeskim
# cache.caffeine.maximumSize=1000
# cache.caffeine.expireAfterWriteSeconds=5

# ===============================
#=bytedesk upload config
# ===============================
bytedesk.upload-type=local
bytedesk.upload-dir=upload

# ===============================
#=com.bytedesk.socket module
# ===============================
bytedesk.socket.host=0.0.0.0
bytedesk.socket.port=9883
bytedesk.socket.websocket-port=9885
bytedesk.socket.leak-detector-level=SIMPLE
bytedesk.socket.parent-event-loop-group-thread-count=1
bytedesk.socket.child-event-loop-group-thread-count=8
bytedesk.socket.max-payload-size=10240

# ===============================
#=com.bytedesk.cluster module
# ===============================
bytedesk.cluster.host=230.0.0.0
bytedesk.cluster.port=6781
bytedesk.cluster.client-port=6771


# ===============================
#=com.bytedesk.ai module
# ===============================
bytedesk.ai.zhipi-api-key=f03410085cb038ec41098ae7ca6ef047.TrJMIwAULDGymOH4


# ===============================
# 文件上传类型：
# 上传到本地：simple
# 上传到阿里云：aliyun
# ===============================

# # 本地存储文件
# #upload.type=simple
# upload.dir.path=upload
# upload.url.prefix=http://192.168.0.100:8000/
# #upload.url.prefix=http://localhost:8000/
# #upload.url.prefix=http://10.0.2.2:8000/
# # 阿里云OSS
# upload.type=aliyun
# # 腾讯云cos
# # upload.type=tencent
# # 自定义文件夹前缀，用于阿里云和腾讯云
upload.dir.prefix=

#
# ===============================
# = 阿里云OSS访问密钥
# ===============================
aliyun.region-id=cn-hangzhou
# 
aliyun.access-key-id=u0oshugwsk7y19j7ciiastj2
aliyun.access-key-secret=f1xr0qG/IXb0IUSSgq3k0rJ8NvY=

# 阿里云OSS服务相关配置
# OSS的endpoint,这里是华南地区(也就是深圳)
aliyun.oss-endpoint=https://oss-cn-shenzhen.aliyuncs.com
aliyun.oss-base-url=https://bytedesk.oss-cn-shenzhen.aliyuncs.com
# 这是创建的bucket
aliyun.oss-bucket-name=bytedesk
# 这里已经把自己的域名映射到bucket地址了。需要设置域名绑定，设置域名CNAME（暂不使用）
aliyun.oss-img-domain=oss.bytedesk.com

# 阿里云短信服务的签名，可以在控制台找到，如是中文，请转为Unicode
aliyun.sms.signname=萝卜丝
#阿里云短信服务的模板Code，可以在控制台找到
# 萝卜丝验证码
aliyun.sms.templatecode=SMS_175400168
# 验证码
aliyun.sms.liangshibao.signname=良师宝
aliyun.sms.liangshibao.templatecode=SMS_85365092
# 预约提醒
aliyun.sms.liangshibao.appointcode=SMS_215335693

#
# ===============================
# = 腾讯云COS对象存储访问密钥
# ===============================
# 创建bucket并需要在此bucket下创建文件夹：apns/development(二级文件夹), apns/production(二级文件夹), avatars, images, voices, files
# 存储桶所属地域
tencent.bucket.location=ap-shanghai
# 存储桶名称
tencent.bucket.name=
# 访问域名
tencent.bucket.domain=

#API密钥管理获取
tencent.appid=
tencent.secretid=
tencent.secretkey=

# ===============================
#=logging
# https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties.core
# ===============================
logging.level.web=DEBUG
logging.level.org.springframework.security.web.FilterChainProxy=DEBUG
# logging.level.org.springframework.web=INFO
# logging.level.org.springframework.security=INFO
#trace=true
# logging.level.root=DEBUG
logging.level.com.bytedesk.core=DEBUG
logging.level.com.bytedesk.single=DEBUG
logging.level.com.bytedesk.starter=DEBUG
logging.level.com.bytedesk.socket=DEBUG
logging.file.name=logs/bytedeskim.log
logging.file.max-size=10MB
logging.file.max-history=10
# logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n

# ===============================
#=spring-boot-starter-data-jpa
# https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties.data
# ===============================
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/bytedesk_im
spring.datasource.username=root
spring.datasource.password=C8aJEVCCvSA1VFi8
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database=mysql
# spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true


# ===============================
#=spring-boot-starter-cache
# https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties.cache
# ===============================
# disable caching: none, https://docs.spring.io/spring-boot/docs/3.2.0/reference/htmlsingle/#io.caching.provider.none
# spring.cache.type=none
spring.cache.type=redis
# spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=100,expireAfterAccess=5m
# 
# spring.cache.redis.cache-null-values=true
spring.cache.redis.use-key-prefix=true
spring.cache.redis.key-prefix=bytedeskim:
# 
# ===============================
#=spring-boot-starter-data-redis
# https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties.data
# ===============================
spring.data.redis.database=0
spring.data.redis.host=127.0.0.1
spring.data.redis.port=6379
spring.data.redis.password=C8aJEVCCvSA1VFi8


# ===============================
#=spring-boot-starter-data-rest
# http://localhost:9003/rest/api/profile
# https://docs.spring.io/spring-data/rest/reference/index.html
# https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#application-properties.data.spring.data.rest.base-path
# ===============================
spring.data.rest.base-path=/api
# spring.data.rest.default-page-size=20
# spring.data.rest.max-page-size=
# spring.data.rest.page-param-name=page
# spring.data.rest.limit-param-name=size
# spring.data.rest.sort-param-name=sort
spring.data.rest.return-body-on-create=true
spring.data.rest.return-body-on-update=true
# spring.data.rest.sort-param-name=

# ===============================
#=spring-boot-starter-data-security
# ===============================
# properties: https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties.security
# spring.security.user.name=user
# spring.security.user.password=123456


# ===============================
#=spring-boot-starter-actuator
# https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties.actuator
# http://localhost:9003/im/actuator
# ===============================
management.endpoints.web.base-path=/im/actuator
management.endpoints.web.exposure.include=*
management.info.env.enabled=true

# ===============================
#=spring-boot-starter-admin-client
# https://github.com/codecentric/spring-boot-admin?tab=readme-ov-file
# https://docs.spring-boot-admin.com/current/getting-started.html
# ===============================
spring.boot.admin.client.url=http://localhost:9003
# spring.boot.admin.ui.public-url=http://localhost:9003/im/actuator/admin

# ===============================
#=springdoc
# https://springdoc.org/#properties
# http://localhost:9003/swagger-ui/index.html
# http://localhost:9003/v3/api-docs
# ===============================

springdoc.show-actuator=false
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/index.html
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs


# ===============================
#=spring-boot-devtools
# https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties.devtools
# ===============================
spring.devtools.restart.poll-interval=2s
spring.devtools.restart.quiet-period=1s

#
# ===============================
# = Apache ActiveMQ Artemis logger levels
# ===============================
# https://activemq.apache.org/components/artemis/documentation/latest/logging.html
# https://codeaches.com/spring-boot/embedded-activemq-artemis-jms-broker
logging.level.org.apache.activemq.artemis.core.server=WARN
logging.level.org.apache.activemq.artemis.utils=WARN
logging.level.org.apache.activemq.artemis.jms=WARN
logging.level.org.apache.activemq.audit.base=WARN
logging.level.org.apache.activemq.audit.message=WARN

# ===============================
# = spring-boot-starter-artemis
# ===============================
# spring.artemis.mode=embedded

#
# ===============================
# = Quartz
# https://medium.com/@ChamithKodikara/spring-boot-2-quartz-2-scheduler-integration-a8eaaf850805
# SpringBoot官方说明：https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-quartz.html
# Quartz官方文档：https://www.quartz-scheduler.org/documentation/2.3.1-SNAPSHOT/tutorials/index.html
# ===============================
spring.quartz.job-store-type=jdbc
# # 3种模式: ALWAYS、EMBEDDED、NEVER
# 首次启动时创建表，但每次都会清空数据，初始化之后，需要修改为never
spring.quartz.jdbc.initialize-schema=always
# spring.quartz.jdbc.initialize-schema=never
spring.quartz.wait-for-jobs-to-complete-on-shutdown=true
# 
spring.quartz.properties.org.quartz.scheduler.instanceName=BytedeskScheduler
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
#spring.quartz.properties.org.quartz.scheduler.instanceIdGenerator.class=io.xiaper.schedule.util.CustomQuartzInstanceIdGenerator
# 
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.jobStore.tablePrefix=QRTZ_
# spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.class=org.springframework.scheduling.quartz.LocalDataSourceJobStore
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.clusterCheckinInterval=10000
spring.quartz.properties.org.quartz.jobStore.useProperties=false
# 
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount=5
spring.quartz.properties.org.quartz.threadPool.threadPriority=5
spring.quartz.properties.org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true

#
# ===============================
# = multipart file uploads
# ===============================
spring.servlet.multipart.enabled=true
# Write files to disk if the file size is more than 2KB.
spring.servlet.multipart.file-size-threshold=2KB
# The intermediate disk location where the uploaded files are written
spring.servlet.multipart.location=/tmp
# Maximum file size that can be uploaded
spring.servlet.multipart.max-file-size=100MB
# Maximum allowed multipart request size
spring.servlet.multipart.max-request-size=100MB
