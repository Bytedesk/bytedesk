<?xml version="1.0" encoding="utf-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">

    <!-- ==========================================
         创建质检统计视图
         Create Quality Statistic Views
         Date: 2025-10-10
         ========================================== -->

    <!-- 1. 质检统计视图 - TEMPORARILY DISABLED: Needs redesign for non-existent columns -->
    <changeSet id="251010-create-view-quality-check-stats" author="bytedesk">
        <preConditions onFail="MARK_RAN">
            <and>
                <sqlCheck expectedResult="1">SELECT 0</sqlCheck>
                <!-- DISABLED: This VIEW tries to access non-existent columns:
                     - agent_uid, workgroup_uid, inspector_uid (need JOINs)
                     - quality_level, total_score, bonus_score, deduction_score (Java calculated methods)
                     Needs complete redesign with proper JOINs and SQL calculations -->
            </and>
        </preConditions>
        
        <createView viewName="bytedesk_service_view_quality_check_stats" replaceIfExists="true">
            SELECT 
                qc.agent_uid,
                qc.org_uid,
                qc.workgroup_uid,
                DATE(qc.created_at) AS stat_date,
                HOUR(qc.created_at) AS stat_hour,
                COUNT(*) AS total_checks,
                COUNT(CASE WHEN qc.quality_level = 'EXCELLENT' THEN 1 END) AS excellent_count,
                COUNT(CASE WHEN qc.quality_level = 'GOOD' THEN 1 END) AS good_count,
                COUNT(CASE WHEN qc.quality_level = 'PASS' THEN 1 END) AS pass_count,
                COUNT(CASE WHEN qc.quality_level = 'FAIL' THEN 1 END) AS fail_count,
                ROUND(COUNT(CASE WHEN qc.quality_level = 'EXCELLENT' THEN 1 END) * 100.0 / COUNT(*), 2) AS excellent_rate,
                ROUND(COUNT(CASE WHEN qc.quality_level = 'GOOD' THEN 1 END) * 100.0 / COUNT(*), 2) AS good_rate,
                ROUND(COUNT(CASE WHEN qc.quality_level = 'PASS' THEN 1 END) * 100.0 / COUNT(*), 2) AS pass_rate,
                ROUND(COUNT(CASE WHEN qc.quality_level = 'FAIL' THEN 1 END) * 100.0 / COUNT(*), 2) AS fail_rate,
                ROUND(
                    (COUNT(CASE WHEN qc.quality_level IN ('EXCELLENT', 'GOOD', 'PASS') THEN 1 END) * 100.0) / COUNT(*),
                    2
                ) AS qualified_rate,
                COALESCE(AVG(qc.total_score), 0) AS avg_score,
                COALESCE(MAX(qc.total_score), 0) AS max_score,
                COALESCE(MIN(qc.total_score), 0) AS min_score,
                COALESCE(STDDEV(qc.total_score), 0) AS score_stddev,
                COALESCE(AVG(qc.bonus_score), 0) AS avg_bonus_score,
                COALESCE(SUM(qc.bonus_score), 0) AS total_bonus_score,
                COALESCE(AVG(qc.deduction_score), 0) AS avg_deduction_score,
                COALESCE(SUM(qc.deduction_score), 0) AS total_deduction_score,
                COUNT(DISTINCT qc.inspector_uid) AS inspector_count,
                NOW() AS view_updated_at
            FROM bytedesk_service_quality_check qc
            WHERE qc.deleted = 0
            GROUP BY 
                qc.agent_uid,
                qc.org_uid,
                qc.workgroup_uid,
                DATE(qc.created_at),
                HOUR(qc.created_at)
        </createView>
        
        <rollback>
            <dropView viewName="bytedesk_service_view_quality_check_stats"/>
        </rollback>
    </changeSet>

    <!-- 2. 质检申诉统计视图 - TEMPORARILY DISABLED: Needs verification of column names -->
    <changeSet id="251010-create-view-quality-appeal-stats" author="bytedesk">
        <preConditions onFail="MARK_RAN">
            <and>
                <sqlCheck expectedResult="1">SELECT 0</sqlCheck>
                <!-- DISABLED: Needs verification that agent_uid, workgroup_uid columns exist -->
            </and>
        </preConditions>
        
        <createView viewName="bytedesk_service_view_quality_appeal_stats" replaceIfExists="true">
            SELECT 
                qa.agent_uid,
                qa.org_uid,
                qa.workgroup_uid,
                DATE(qa.created_at) AS stat_date,
                COUNT(*) AS total_appeals,
                COUNT(CASE WHEN qa.status = 'APPROVED' THEN 1 END) AS approved_appeals,
                COUNT(CASE WHEN qa.status = 'REJECTED' THEN 1 END) AS rejected_appeals,
                COUNT(CASE WHEN qa.status = 'PENDING' THEN 1 END) AS pending_appeals,
                ROUND(
                    COUNT(CASE WHEN qa.status = 'APPROVED' THEN 1 END) * 100.0 / 
                    NULLIF(COUNT(CASE WHEN qa.status IN ('APPROVED', 'REJECTED') THEN 1 END), 0),
                    2
                ) AS appeal_success_rate,
                COALESCE(AVG(
                    CASE 
                        WHEN qa.handled_at IS NOT NULL 
                        THEN TIMESTAMPDIFF(SECOND, qa.created_at, qa.handled_at)
                    END
                ), 0) AS avg_handle_time,
                NOW() AS view_updated_at
            FROM bytedesk_service_quality_appeal qa
            WHERE qa.deleted = 0
            GROUP BY 
                qa.agent_uid,
                qa.org_uid,
                qa.workgroup_uid,
                DATE(qa.created_at)
        </createView>
        
        <rollback>
            <dropView viewName="bytedesk_service_view_quality_appeal_stats"/>
        </rollback>
    </changeSet>

    <!-- 3. 质检覆盖率视图 -->
    <changeSet id="251010-create-view-quality-coverage" author="bytedesk">
        <preConditions onFail="MARK_RAN">
            <and>
                <tableExists tableName="bytedesk_service_quality_check"/>
                <tableExists tableName="bytedesk_service_queue_member"/>
                <tableExists tableName="bytedesk_core_thread"/>
                <not>
                    <viewExists viewName="bytedesk_service_view_quality_coverage"/>
                </not>
            </and>
        </preConditions>
        
        <createView viewName="bytedesk_service_view_quality_coverage" replaceIfExists="true">
            SELECT 
                qm.org_uid,
                JSON_UNQUOTE(JSON_EXTRACT(t.agent, '$.uid')) AS agent_uid,
                qm.workgroup_queue_id AS workgroup_uid,
                DATE(qm.created_at) AS stat_date,
                COUNT(DISTINCT t.uid) AS total_threads,
                COUNT(DISTINCT CASE WHEN qc.uid IS NOT NULL THEN t.uid END) AS checked_threads,
                COUNT(DISTINCT CASE WHEN qc.uid IS NULL THEN t.uid END) AS unchecked_threads,
                ROUND(
                    COUNT(DISTINCT CASE WHEN qc.uid IS NOT NULL THEN t.uid END) * 100.0 / 
                    COUNT(DISTINCT t.uid),
                    2
                ) AS coverage_rate,
                NOW() AS view_updated_at
            FROM bytedesk_service_queue_member qm
            INNER JOIN bytedesk_core_thread t ON qm.thread_id = t.id
            LEFT JOIN bytedesk_service_quality_check qc 
                ON t.uid = qc.thread_uid 
                AND qc.is_deleted = 0
            WHERE qm.is_deleted = 0
              AND qm.agent_accepted_at IS NOT NULL
              AND t.agent IS NOT NULL
              AND t.agent != ''
            GROUP BY 
                qm.org_uid,
                JSON_UNQUOTE(JSON_EXTRACT(t.agent, '$.uid')),
                qm.workgroup_queue_id,
                DATE(qm.created_at)
        </createView>
        
        <rollback>
            <dropView viewName="bytedesk_service_view_quality_coverage"/>
        </rollback>
    </changeSet>

    <!-- 4. 质检员工作量统计视图 - TEMPORARILY DISABLED: Needs redesign for non-existent columns -->
    <changeSet id="251010-create-view-inspector-workload-stats" author="bytedesk">
        <preConditions onFail="MARK_RAN">
            <and>
                <sqlCheck expectedResult="1">SELECT 0</sqlCheck>
                <!-- DISABLED: Same issues as quality-check-stats - non-existent columns -->
            </and>
        </preConditions>
        
        <createView viewName="bytedesk_service_view_inspector_workload_stats" replaceIfExists="true">
            SELECT 
                qc.inspector_uid,
                qc.org_uid,
                DATE(qc.created_at) AS stat_date,
                COUNT(*) AS total_checks,
                COUNT(DISTINCT qc.agent_uid) AS checked_agents,
                COUNT(DISTINCT DATE(qc.created_at)) AS work_days,
                COUNT(CASE WHEN qc.quality_level = 'EXCELLENT' THEN 1 END) AS excellent_checks,
                COUNT(CASE WHEN qc.quality_level = 'GOOD' THEN 1 END) AS good_checks,
                COUNT(CASE WHEN qc.quality_level = 'PASS' THEN 1 END) AS pass_checks,
                COUNT(CASE WHEN qc.quality_level = 'FAIL' THEN 1 END) AS fail_checks,
                COALESCE(AVG(qc.total_score), 0) AS avg_score,
                COALESCE(AVG(
                    CASE 
                        WHEN qc.completed_at IS NOT NULL 
                        THEN TIMESTAMPDIFF(SECOND, qc.created_at, qc.completed_at)
                    END
                ), 0) AS avg_check_duration,
                COUNT(CASE WHEN qc.has_appeal = 1 THEN 1 END) AS checks_with_appeal,
                NOW() AS view_updated_at
            FROM bytedesk_service_quality_check qc
            WHERE qc.deleted = 0
            GROUP BY 
                qc.inspector_uid,
                qc.org_uid,
                DATE(qc.created_at)
        </createView>
        
        <rollback>
            <dropView viewName="bytedesk_service_view_inspector_workload_stats"/>
        </rollback>
    </changeSet>

    <!-- 5. 组织级质检综合统计视图 - TEMPORARILY DISABLED: Needs redesign for non-existent columns -->
    <changeSet id="251010-create-view-org-quality-summary" author="bytedesk">
        <preConditions onFail="MARK_RAN">
            <and>
                <sqlCheck expectedResult="1">SELECT 0</sqlCheck>
                <!-- DISABLED: Same issues - non-existent columns need redesign -->
            </and>
        </preConditions>
        
        <createView viewName="bytedesk_service_view_org_quality_summary" replaceIfExists="true">
            SELECT 
                qc.org_uid,
                DATE(qc.created_at) AS stat_date,
                COUNT(*) AS total_checks,
                COUNT(DISTINCT qc.agent_uid) AS checked_agents,
                COUNT(DISTINCT qc.inspector_uid) AS active_inspectors,
                COUNT(CASE WHEN qc.quality_level = 'EXCELLENT' THEN 1 END) AS excellent_count,
                COUNT(CASE WHEN qc.quality_level = 'GOOD' THEN 1 END) AS good_count,
                COUNT(CASE WHEN qc.quality_level = 'PASS' THEN 1 END) AS pass_count,
                COUNT(CASE WHEN qc.quality_level = 'FAIL' THEN 1 END) AS fail_count,
                ROUND(
                    COUNT(CASE WHEN qc.quality_level IN ('EXCELLENT', 'GOOD', 'PASS') THEN 1 END) * 100.0 / COUNT(*),
                    2
                ) AS qualified_rate,
                COALESCE(AVG(qc.total_score), 0) AS avg_score,
                COUNT(CASE WHEN qc.has_appeal = 1 THEN 1 END) AS checks_with_appeal,
                NOW() AS view_updated_at
            FROM bytedesk_service_quality_check qc
            WHERE qc.deleted = 0
            GROUP BY 
                qc.org_uid,
                DATE(qc.created_at)
        </createView>
        
        <rollback>
            <dropView viewName="bytedesk_service_view_org_quality_summary"/>
        </rollback>
    </changeSet>

</databaseChangeLog>
