services:
  bytedesk-mysql:
    image: mysql:latest
    container_name: mysql-bytedesk
    environment:
      MYSQL_DATABASE: bytedesk
      MYSQL_ROOT_PASSWORD: r8FqfdbWUaN3
    ports:
      - "13306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - bytedesk-network

  bytedesk-redis:
    image: redis/redis-stack-server:latest
    container_name: redis-bytedesk
    ports:
      - "16379:6379"
    environment:
      - REDIS_ARGS=--requirepass qfRxz3tVT8Nh
    volumes:
      - redis_data:/data
    networks:
      - bytedesk-network

  bytedesk-ollama:
    image: ollama/ollama:latest
    container_name: ollama-bytedesk
    ports:
      - "21434:11434"
    volumes:
      - bytedesk_ollama_models:/root/.ollama
    environment:
      - OLLAMA_MODELS=qwen2.5:1.5b
    # 添加健康检查
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    # 添加初始化脚本
    entrypoint: >
      /bin/sh -c "
      ollama serve &
      sleep 10 &&
      if ! ollama list | grep -q 'qwen2.5:1.5b'; then
        echo 'Pulling qwen2.5:1.5b model...'
        ollama pull qwen2.5:1.5b
      else
        echo 'qwen2.5:1.5b model already exists'
      fi &&
      if ! ollama list | grep -q 'deepseek-r1:1.5b'; then
        echo 'Pulling deepseek-r1:1.5b model...'
        ollama pull deepseek-r1:1.5b
      else
        echo 'deepseek-r1:1.5b model already exists'
      fi &&
      wait"
    networks:
      - bytedesk-network

  # http://127.0.0.1:19090/
  bytedesk-prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-bytedesk
    ports:
      - "19090:9090"
    environment:
      - PROMETHEUS_ADMIN_USER=admin
      - PROMETHEUS_ADMIN_PASSWORD=admin
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-admin-api'
      - '--web.external-url=http://localhost:19090'
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - bytedesk-network

  # http://127.0.0.1:13000/
  bytedesk-grafana:
    image: grafana/grafana:latest
    container_name: grafana-bytedesk
    ports:
      - "13000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_BASIC_ENABLED=true
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      # Provisioning settings
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - bytedesk-network
    depends_on:
      - bytedesk-prometheus

volumes:
  mysql_data:
    name: bytedesk_mysql_data
  redis_data:
    name: bytedesk_redis_data
  bytedesk_ollama_models:
    name: bytedesk_ollama_models
  prometheus_data:
    name: bytedesk_prometheus_data
  grafana_data:
    name: bytedesk_grafana_data

networks:
  bytedesk-network:
    driver: bridge
