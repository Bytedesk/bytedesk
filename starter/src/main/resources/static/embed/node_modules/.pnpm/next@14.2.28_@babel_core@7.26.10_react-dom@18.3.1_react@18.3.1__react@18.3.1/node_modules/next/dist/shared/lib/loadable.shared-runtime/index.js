import { commonjsRequire as E } from "../../../../../../../../../_virtual/_commonjs-dynamic-modules/index.js";
import { __exports as _ } from "../../../../../../../../../_virtual/loadable.shared-runtime/index.js";
import "../../../../../../../@swc_helpers@0.5.5/node_modules/@swc/helpers/cjs/_interop_require_default/index.js";
import T from "react";
import { __require as q } from "../loadable-context.shared-runtime/index.js";
import { __exports as A } from "../../../../../../../../../_virtual/_interop_require_default/index.js";
var b;
function V() {
  return b ? _ : (b = 1, function(c) {
    Object.defineProperty(c, "__esModule", {
      value: !0
    }), Object.defineProperty(c, "default", {
      enumerable: !0,
      get: function() {
        return I;
      }
    });
    const n = /* @__PURE__ */ A._(T), y = q();
    function g(t) {
      return t && t.default ? t.default : t;
    }
    const m = [], p = [];
    let h = !1;
    function w(t) {
      let r = t(), e = {
        loading: !0,
        loaded: null,
        error: null
      };
      return e.promise = r.then((o) => (e.loading = !1, e.loaded = o, o)).catch((o) => {
        throw e.loading = !1, e.error = o, o;
      }), e;
    }
    function L(t, r) {
      let e = Object.assign({
        loader: null,
        loading: null,
        delay: 200,
        timeout: null,
        webpack: null,
        modules: null
      }, r), o = null;
      function l() {
        if (!o) {
          const a = new R(t, e);
          o = {
            getCurrentValue: a.getCurrentValue.bind(a),
            subscribe: a.subscribe.bind(a),
            retry: a.retry.bind(a),
            promise: a.promise.bind(a)
          };
        }
        return o.promise();
      }
      if (typeof window > "u" && m.push(l), !h && typeof window < "u") {
        const a = e.webpack && typeof E.resolveWeak == "function" ? e.webpack() : e.modules;
        a && p.push((s) => {
          for (const i of a)
            if (s.includes(i))
              return l();
        });
      }
      function C() {
        l();
        const a = n.default.useContext(y.LoadableContext);
        a && Array.isArray(e.modules) && e.modules.forEach((s) => {
          a(s);
        });
      }
      function f(a, s) {
        C();
        const i = n.default.useSyncExternalStore(o.subscribe, o.getCurrentValue, o.getCurrentValue);
        return n.default.useImperativeHandle(s, () => ({
          retry: o.retry
        }), []), n.default.useMemo(() => i.loading || i.error ? /* @__PURE__ */ n.default.createElement(e.loading, {
          isLoading: i.loading,
          pastDelay: i.pastDelay,
          timedOut: i.timedOut,
          error: i.error,
          retry: o.retry
        }) : i.loaded ? /* @__PURE__ */ n.default.createElement(g(i.loaded), a) : null, [
          a,
          i
        ]);
      }
      return f.preload = () => l(), f.displayName = "LoadableComponent", /* @__PURE__ */ n.default.forwardRef(f);
    }
    class R {
      promise() {
        return this._res.promise;
      }
      retry() {
        this._clearTimeouts(), this._res = this._loadFn(this._opts.loader), this._state = {
          pastDelay: !1,
          timedOut: !1
        };
        const { _res: r, _opts: e } = this;
        r.loading && (typeof e.delay == "number" && (e.delay === 0 ? this._state.pastDelay = !0 : this._delay = setTimeout(() => {
          this._update({
            pastDelay: !0
          });
        }, e.delay)), typeof e.timeout == "number" && (this._timeout = setTimeout(() => {
          this._update({
            timedOut: !0
          });
        }, e.timeout))), this._res.promise.then(() => {
          this._update({}), this._clearTimeouts();
        }).catch((o) => {
          this._update({}), this._clearTimeouts();
        }), this._update({});
      }
      _update(r) {
        this._state = {
          ...this._state,
          error: this._res.error,
          loaded: this._res.loaded,
          loading: this._res.loading,
          ...r
        }, this._callbacks.forEach((e) => e());
      }
      _clearTimeouts() {
        clearTimeout(this._delay), clearTimeout(this._timeout);
      }
      getCurrentValue() {
        return this._state;
      }
      subscribe(r) {
        return this._callbacks.add(r), () => {
          this._callbacks.delete(r);
        };
      }
      constructor(r, e) {
        this._loadFn = r, this._opts = e, this._callbacks = /* @__PURE__ */ new Set(), this._delay = null, this._timeout = null, this.retry();
      }
    }
    function u(t) {
      return L(w, t);
    }
    function d(t, r) {
      let e = [];
      for (; t.length; ) {
        let o = t.pop();
        e.push(o(r));
      }
      return Promise.all(e).then(() => {
        if (t.length)
          return d(t, r);
      });
    }
    u.preloadAll = () => new Promise((t, r) => {
      d(m).then(t, r);
    }), u.preloadReady = (t) => (t === void 0 && (t = []), new Promise((r) => {
      const e = () => (h = !0, r());
      d(p, t).then(e, e);
    })), typeof window < "u" && (window.__NEXT_PRELOADREADY = u.preloadReady);
    const I = u;
  }(_), _);
}
export {
  V as __require
};
