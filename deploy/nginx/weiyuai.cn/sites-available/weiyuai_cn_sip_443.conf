#
# https://sip.weiyuai.cn
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /etc/letsencrypt/live/weiyuai.cn/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/weiyuai.cn/privkey.pem; # managed by Certbot

    server_name sip.weiyuai.cn;

    # SIP over WebSocket Secure (SIP/WSS)
    location /ws {
        # Terminate TLS at nginx and proxy to FreeSWITCH WSS (7443)
        proxy_pass https://freeswitch_wss;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_connect_timeout 3600s;
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_ssl_server_name on;
        proxy_ssl_verify off;
    }

    # Alternate path for WSS, same behavior as /ws
    location /wss {
        proxy_pass https://freeswitch_wss;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_connect_timeout 3600s;
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_ssl_server_name on;
        proxy_ssl_verify off;
    }

    # Root: exact match returns custom HTML page (not a reverse proxy)
    location = / {
        # 默认根路径返回说明页面（非反向代理）
        default_type text/html;
        return 200 '<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>SIP over WebSocket Gateway</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 880px;
            margin: 50px auto;
            padding: 20px;
            background: #f5f5f5;
        }
        .container {
            background: #fff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 { color: #333; margin-top: 0; }
        h2 { color: #555; margin-top: 24px; }
        .info {
            background: #e3f2fd;
            padding: 15px;
            border-radius: 6px;
            margin: 16px 0;
            border-left: 4px solid #2196f3;
        }
        .warning {
            background: #fff3e0;
            padding: 15px;
            border-radius: 6px;
            margin: 16px 0;
            border-left: 4px solid #ff9800;
        }
        code {
            background: #f5f5f5;
            padding: 2px 6px;
            border-radius: 3px;
            font-family: Menlo, Monaco, Consolas, monospace;
        }
        pre {
            background: #263238;
            color: #c3e88d;
            padding: 16px;
            border-radius: 6px;
            overflow-x: auto;
        }
        a { color: #1976d2; text-decoration: none; }
        a:hover { text-decoration: underline; }
        ul { line-height: 1.8; }
        .links a { display: inline-block; margin-right: 12px; }
    </style>
    </head>
<body>
    <div class="container">
        <h1>📞 SIP WebSocket 服务</h1>

        <div class="warning">
            <strong>重要提示：</strong> 本服务提供 SIP over WebSocket 网关（WSS/WS）。此页面仅为说明与测试入口，非通用 HTTP API。
        </div>

        <h2>服务器地址</h2>
        <div class="info">
            WSS（推荐）：<code>wss://sip.weiyuai.cn/ws</code><br>
            WS（调试用）：<code>ws://sip.weiyuai.cn/ws-insecure</code>
        </div>

        <h2>快速开始（SIP.js 示例）</h2>
        <pre>// 使用 SIP.js 连接到 WSS 网关
import { UserAgent } from "sip.js";

const ua = new UserAgent({
  uri: "sip:1000@sip.weiyuai.cn",
  transportOptions: {
    server: "wss://sip.weiyuai.cn/ws"
  },
  authorizationUsername: "1000",
  authorizationPassword: "your_password"
});

await ua.start();
// 后续可注册、呼叫等</pre>

        <h2>测试与演示</h2>
        <ul class="links">
            <li><a href="/sip_demo" target="_blank">/sip_demo</a> - 简单 SIP 呼叫演示</li>
            <li><a href="/sip_demo_sipjs" target="_blank">/sip_demo_sipjs</a> - 基于 SIP.js 的演示</li>
        </ul>

        <h2>参考</h2>
        <ul>
            <li><a href="https://sipjs.com/" target="_blank">SIP.js 文档</a></li>
            <li><a href="https://freeswitch.org/" target="_blank">FreeSWITCH 官网</a></li>
        </ul>
    </div>
    </body>
    </html>';
    }

    # SIP over WebSocket (SIP/WS) - fallback
    location /ws-insecure {
        proxy_pass http://freeswitch_ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Server $host;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_connect_timeout 3600s;
        proxy_buffering off;
        proxy_request_buffering off;
        # Error handling
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
    }

    # Catch-all: proxy any non-root and non-WS/WSS path to 14.103.165.199 preserving the original URI
    location / {
        proxy_pass http://14.103.165.199; # no URI part -> pass original URI as-is
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
        proxy_connect_timeout 60s;
    }

}
