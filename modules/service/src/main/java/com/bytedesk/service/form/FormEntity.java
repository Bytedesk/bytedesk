/*
 * @Author: jackning 270580156@qq.com
 * @Date: 2024-05-11 18:14:28
 * @LastEditors: jackning 270580156@qq.com
 * @LastEditTime: 2025-08-02 08:13:16
 * @Description: bytedesk.com https://github.com/Bytedesk/bytedesk
 *   Please be aware of the BSL license restrictions before installing Bytedesk IM – 
 *  selling, reselling, or hosting Bytedesk IM as a service is a breach of the terms and automatically terminates your rights under the license.
 *  Business Source License 1.1: https://github.com/Bytedesk/bytedesk/blob/main/LICENSE 
 *  contact: 270580156@qq.com 
 *  联系：270580156@qq.com
 * Copyright (c) 2024 by bytedesk.com, All Rights Reserved. 
 */
package com.bytedesk.service.form;

import com.bytedesk.core.base.BaseEntity;
import com.bytedesk.core.constant.TypeConsts;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.experimental.Accessors;
import lombok.experimental.SuperBuilder;
import lombok.Getter;
import lombok.Setter;

/**
 * Form entity for storing form schema generated by frontend low-code drag-and-drop
 * Used to store form structure definition in JSON format
 * 
 * Database Table: bytedesk_service_form
 * Purpose: Stores form definitions and basic metadata
 */
@Entity
@Getter
@Setter
@SuperBuilder
@Accessors(chain = true)
@EqualsAndHashCode(callSuper = true)
@AllArgsConstructor
@NoArgsConstructor
@Table(name = "bytedesk_service_form")
public class FormEntity extends BaseEntity {
    private static final long serialVersionUID = 1L;


    /**
     * Name or title of the form
     */
    private String name;

    /**
     * Description of the form's purpose
     */
    private String description;

    /**
     * Form type (TICKET, THREAD, FLOW, etc.)
     */
    @Builder.Default
    @Column(name = "form_type")
    private String type = FormTypeEnum.TICKET.name();

    /**
     * Current status of the form (DRAFT, PUBLISHED, ARCHIVED, DISABLED)
     */
    @Builder.Default
    @Column(name = "form_status")
    private String status = FormStatusEnum.DRAFT.name();
    
    /**
     * Form structure definition stored as JSON format
     * Contains the complete form schema generated by frontend low-code editor
     */
    @Column(name = "form_schema", columnDefinition = TypeConsts.COLUMN_TYPE_TEXT)
    private String schema;

    /**
     * Whether the server is enabled
     */
    @Builder.Default
    private Boolean enabled = false;

    /**
     * Category UID for organizing servers (optional)
     */
    private String categoryUid;

}
